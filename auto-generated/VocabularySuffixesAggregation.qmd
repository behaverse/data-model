
### Aggregation Suffixes

 We will use the following names as suffixes to refer to particular operations in variable names. For example the mean of a variable "age" would be called "age_mean" (and not for example age_avg or age_m). We typically use the same name as the aggregation function name in R or Python. More specialized terms require explicit descriptions.

<br>mean	[float]
: The average of a numeric variable. Don't use `avg` or `average`.



median	[float]
: The median of the variable. Don't use `med`.



mode	[nan]
: The mode of a variable.



min	[nan]
: The minimum value of a variable.



max	[nan]
: The maximum value of a variable.



sd	[nan]
: The standard deviation of a variable. Don't use `std` or `SD`.



var	[nan]
: The variance of a variable.



iqr	[nan]
: The interquartile range of a variable. Don't use `IQR`.



sum	[float]
: The sum on a variable (e.g., `item_price_sum = sum(item_price)`). Don't use total to designate the result of a sum operation. 



count	[integer]
: Refers to the count of a particular entity (e.g., a variable named `page_count` indicates the number of pages).

:::{.callout-note}

 Note that "count" is different from "sum" (e.g., one can sum negative float values while count involves positive integers only) and from "index" (e.g., "this is the second" versus "there are two").
Note also that while the use "n" to refer to counts is much shorter and might be standard in some circles, "count" is more explicit and less error prone than "n" which may mean different things in other contexts (e.g., the length of the variable, an iterator). 

:::



quantile*	[float]
: quantiles are similar to percentiles; both refer to the value of a variable x that splits the data such that a given fraction of the data is smaller than x. Quantile expresses that fraction as a number between 0 and 1 while percentiles express it as a percentage (between 0 and 100). > We use quantiles rather than percentiles because they allow us to name the resulting variables in a simpler way. We use the following convention: 
> - `quantile(x, q = 0.23)` -> `quantile23`
> - `quantile(x, q = 0.145)` -> `quantile145`

:::{.callout-note}

  `quantile(x, q = 1)` can not be expressed using this convention. Note however that `quantile(x, q = 1)` is in fact equivalent to `max(x)` which is the preferred expression. 

:::



