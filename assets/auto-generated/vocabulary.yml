- category: General
  fields:
  - publish: true
    name: accuracy
    data_type: float
    description: '`accuracy` refers to a measure of performance; in many tasks, it
      reflects the percentage (0-100%) or fraction (0-1) of correct responses. We
      will always use `accuracy` to refer to a performance measure that is a float
      and bounded in the [0-1] range.'
    range: 0 to 1 (inclusive).
    notes: .nan
  - publish: true
    name: correct
    data_type: boolean
    description: '`correct` is a boolean variable which indicates for a given trial
      or response whether it was correct or not. When no response was given when it
      should (i.e., timeout), correct evaluates to `FALSE` rather than `NA`. This
      is to avoid the case where people would be given a high performance score when
      in fact they avoided all difficult trials and responded correctly only to easy
      trials.

      '
    range: .nan
    notes: .nan
  - publish: true
    name: response_time
    data_type: float
    description: 'the meaning of `response_time` (and its units) is not consistent
      across studies. For us, `response_time` is the duration between the moment the
      participant fully completed their response on a given trial and the moment that
      the earliest possible correct response could have been completed by an AI agent
      with perfect knowledge of the task and ability to instantaneously execute the
      response.


      **Default unit:** seconds '
    range: .nan
    notes: "Other measures of durations exist and may be useful to describe a person's\
      \ response. If such additional measures are needed, they should be specified\
      \ explicitly. For example\n - `response_onset`\n - `response_offset`\n - `response_duration`\n\
      \n\nUnits for response times are not consistent across papers and publicly available\
      \ datasets and one can find them expressed in either seconds or milliseconds.\
      \ We decided to use seconds as the default unit for response times because:\n\
      \ - avoid \"exception\" by always using seconds as duration measure.\n - avoid\
      \ computation by keeping the units as they currently are in our raw data and\
      \ task specs.\n - avoid the temptation to round rt to integers when expressed\
      \ in milliseconds.\n - take advantage of the fact that most packages to analyse\
      \ rt seem to be using seconds as a default unit; be congruent with what seems\
      \ to be the default unit in fMRI measurements. \n\n\nIt is tempting to abbreviate\
      \ `response_time` as `rt`; however, there are several other variables prefixed\
      \ `response_` which do not have abbreviations. Spelling the names out, while\
      \ making the name longer, makes the overall data structure more consistent and\
      \ explicit."
  - publish: true
    name: timed_out
    data_type: boolean
    description: indicates whether the participant failed to respond within the allocated
      time period.
    range: .nan
    notes: .nan
  description: General vocabulary
  publish: true
- category: Demographics
  fields:
  - publish: true
    name: age
    data_type: float
    description: '`age` is typically expressed in years. However, we don''t recommend
      flooring "age" to get integer values, as flooring implies losing data. It is
      better to leave variables as floats (when they are floats) and let the analyst
      decide whether or not flooring this variable is necessary for their specific
      purpose.'
    range: .nan
    notes: .nan
  - publish: true
    name: gender/sex
    data_type: enum
    description: 'gender and sex are not exactly the same. Sex refers to a biological
      sex while gender is a more complex construct. A person may have a male biological
      sex but identify as a women for example. Depending on the question asked, the
      variable should therefore be either `sex` or `gender`. *"What sex were you assigned
      at birth, such as on an original birth certificate?"* is clearly a question
      about biological sex and should be coded as `sex`. The possible values for `sex`
      are:'
    range: "{\n  \"1\": {\n    \"name\": \"female\",\n    \"description\": \"female\
      \ (girl, woman).\"\n  },\n  \"2\": {\n    \"name\": \"male\",\n    \"description\"\
      : \"male (boy, man).\"\n  },\n  \"3\": {\n    \"name\": \"other\",\n    \"description\"\
      : \"other.\"\n  },\n  \"4\": {\n    \"name\": \"skip question\",\n    \"description\"\
      : \"prefer not to say.\"\n  }\n}"
    notes: .nan
  description: Demographics vocabulary
  publish: true
- category: Generic Suffixes
  fields:
  - publish: true
    name: length
    data_type: float
    description: refers to the length in cm of a physical object. When possible use
      a more specific word (e.g., height, width, distance). Don't use length to mean
      count or size!
    range: .nan
    notes: .nan
  - publish: true
    name: height
    data_type: float
    description: refers to the height of a physical object in cm.
    range: .nan
    notes: .nan
  - publish: true
    name: width
    data_type: float
    description: refers to the width of a physical object in cm.
    range: .nan
    notes: .nan
  - publish: true
    name: weight
    data_type: float
    description: refers to the weight of a physical object in kg .
    range: .nan
    notes: .nan
  - publish: true
    name: count
    data_type: integer
    description: refers to the cardinality of the entity. If an observation/row has
      `car_count = 5` this means that this particular observation involves a total
      count of 5 cars; this 5 is unrelated to other rows in the table.
    range: .nan
    notes: 'Avoid the use of `size` as this term is ambiguous; it could refer to the
      height of a person, the screen width x height dimensions, or a level within
      a scale (e.g., "Medium").


      Avoid the use of `n` to refer to counts.'
  - publish: true
    name: type
    data_type: enum
    description: 'is always an enum. The meaning of the particular enum needs to be
      explained in a codebook.

      It can be tempting to use synonyms of "type", in particular when "type" is already
      taken; such synonyms include things like "category", "kind" or  "set". When
      those synonyms are not required (e.g., domain language) they should be avoided
      and replaced by "type". Not all enums however need to be suffixed with "type". '
    range: .nan
    notes: .nan
  - publish: true
    name: description
    data_type: string
    description: is always a text (String) for human consumption. While it is not
      strictly necessary, a textual description can greatly facilitate the understanding
      and processing of the data by humans.
    range: .nan
    notes: .nan
  description: 'Variables may describe a feature or property of an entity, using the
    format <entity>_<feature>. All names below are not to be used alone but rather
    as suffixes (e.g., "block_type", "stimulus_description"). '
  publish: true
- category: Suffixes/Aggregation
  fields:
  - publish: true
    name: mean
    data_type: float
    description: The average of a numeric variable. Don't use `avg` or `average`.
    range: .nan
    notes: .nan
  - publish: true
    name: median
    data_type: float
    description: The median of the variable. Don't use `med`.
    range: .nan
    notes: .nan
  - publish: true
    name: mode
    data_type: .nan
    description: The mode of a variable.
    range: .nan
    notes: .nan
  - publish: true
    name: min
    data_type: .nan
    description: The minimum value of a variable.
    range: .nan
    notes: .nan
  - publish: true
    name: max
    data_type: .nan
    description: The maximum value of a variable.
    range: .nan
    notes: .nan
  - publish: true
    name: sd
    data_type: .nan
    description: The standard deviation of a variable. Don't use `std` or `SD`.
    range: .nan
    notes: .nan
  - publish: true
    name: var
    data_type: .nan
    description: The variance of a variable.
    range: .nan
    notes: .nan
  - publish: true
    name: iqr
    data_type: .nan
    description: The interquartile range of a variable. Don't use `IQR`.
    range: .nan
    notes: .nan
  - publish: true
    name: sum
    data_type: float
    description: 'The sum on a variable (e.g., `item_price_sum = sum(item_price)`).
      Don''t use total to designate the result of a sum operation. '
    range: .nan
    notes: .nan
  - publish: true
    name: count
    data_type: integer
    description: Refers to the count of a particular entity (e.g., a variable named
      `page_count` indicates the number of pages).
    range: .nan
    notes: 'Note that "count" is different from "sum" (e.g., one can sum negative
      float values while count involves positive integers only) and from "index" (e.g.,
      "this is the second" versus "there are two").

      Note also that while the use "n" to refer to counts is much shorter and might
      be standard in some circles, "count" is more explicit and less error prone than
      "n" which may mean different things in other contexts (e.g., the length of the
      variable, an iterator).'
  - publish: true
    name: quantile*
    data_type: float
    description: "quantiles are similar to percentiles; both refer to the value of\
      \ a variable x that splits the data such that a given fraction of the data is\
      \ smaller than x. Quantile expresses that fraction as a number between 0 and\
      \ 1 while percentiles express it as a percentage (between 0 and 100). > We use\
      \ quantiles rather than percentiles because they allow us to name the resulting\
      \ variables in a simpler way. We use the following convention: \n> - `quantile(x,\
      \ q = 0.23)` -> `quantile23`\n> - `quantile(x, q = 0.145)` -> `quantile145`"
    range: .nan
    notes: ' `quantile(x, q = 1)` can not be expressed using this convention. Note
      however that `quantile(x, q = 1)` is in fact equivalent to `max(x)` which is
      the preferred expression.'
- category: Aggregation Suffixes
  fields:
  - publish: true
    name: rank
    data_type: integer
    description: rank of a variable (first to last)
    range: .nan
    notes: variables can be ranked (for example from the smallest to the largest values)
      and some values can be tied (in which case the rank will no longer be all integers).
      It might not be clear if the ranks are descending or ascending (e.g., `age_rank`).
      If such confusion arises it might be preferable to use a more direct name (e.g.,
      `youngest_to_oldest` or `youngest_first_rank`).
  description: We will use the following names as suffixes to refer to particular
    operations in variable names. For example the mean of a variable "age" would be
    called "age_mean" (and not for example age_avg or age_m). We typically use the
    same name as the aggregation function name in R or Python. More specialized terms
    require explicit descriptions.
  publish: true
- category: Suffixes/Transformation
  fields:
  - publish: true
    name: log
    data_type: .nan
    description: Natural log.
    range: .nan
    notes: .nan
  - publish: true
    name: log2
    data_type: .nan
    description: Log of base 2.
    range: .nan
    notes: .nan
  - publish: true
    name: log10
    data_type: .nan
    description: Log of base 10.
    range: .nan
    notes: 'Always specify the base when using the log except for the natural log '
  - publish: true
    name: sqrt
    data_type: .nan
    description: quare root.
    range: .nan
    notes: .nan
  - publish: true
    name: pow2
    data_type: .nan
    description: power of 2.
    range: .nan
    notes: .nan
  - publish: true
    name: floor
    data_type: .nan
    description: flooring of a number (e.g., 3.6 becomes 3).
    range: .nan
    notes: .nan
  - publish: true
    name: ceil
    data_type: .nan
    description: ceiling of a number (e.g., 3.6 becomes 4).
    range: .nan
    notes: .nan
  - publish: true
    name: round
    data_type: .nan
    description: rounding of a number (e.g., 3.6 becomes 4).
    range: .nan
    notes: .nan
- category: Referencing
  fields:
  - publish: true
    name: '*_id'
    data_type: string
    description: "if a column name is postfix with `_id` (e.g., `participant_id`,\
      \ `task_id`) it is expected that there exists a table which has the same name\
      \ (i.e., \"participant\", \"task), with a primary key named `id` such that a\
      \ value of in the first (`particiapant_id = 215`) refers to an entry in the\
      \ second (a row in the participant table where `id = 215`). It is expected that\
      \ the values in a variable postfixed `_id` are unique within a \"local scope\"\
      \ (e.g., a dataset); however, it is not expected that they are unique globally\u2014\
      for such purposes one should use the `_uuid`.\n: If there is a column named\
      \ `id` (i.e., without prefix) it is expected that there are other data tables\
      \ or files that refer to this column; if such a link does not exist, use `index`\
      \ instead.\nFinally, the postfix `_id` does not imply a particular value format:\
      \ both integers and strings are valid formats. "
    range: .nan
    notes: .nan
  - publish: true
    name: '*_name'
    data_type: string
    description: 'Sometimes "name" is used in a way that is similar to id (e.g., `study_name`
      or `task_name`).

      The difference between `_id` and `_name` is that `_name` is expected to be a
      readable string (e.g., `n-back` versus "f346-r23v"). As with `_id`, it is expected
      that name refers to other data tables and that names are unique within a certain
      context (contrary to `*_label`).'
    range: .nan
    notes: .nan
  - publish: true
    name: '*_uuid'
    data_type: string
    description: "Universally Unique Identifier (https://en.wikipedia.org/wiki/Universally_unique_identifier)\
      \ is a 128-bit number that can be generated on the fly and will most likely\
      \ be unique. uuid can be used to assign a row a unique id without having to\
      \ ensure that that number is not yet used by some other table.\n: _uuid are\
      \ expected to be unique (globally); \n: _uuid are not expected to be human readable;\
      \ \n: **Example**: `123e4567-e89b-12d3-a456-426614174000`"
    range: .nan
    notes: 'ISO/IEC 11578:1996



      We don''t use uid'
  - publish: true
    name: '*_hash'
    data_type: string
    description: "sometimes it is useful to create a key by combining other keys.\
      \ A hash is not strictly necessary as it can be recreated using other variables\
      \ but it can be convenient for data processing.\nhttps://en.wikipedia.org/wiki/Hash_function\
      \ \n: There is not a single standard for hashing; rather there are multiple\
      \ algorithms that can be used. We use both CRC32 (32 hexadecimal characters;\
      \ e.g., \"098f6bcd4621d373cade4e832627b4f6\") and SHA256 (base64 characters,\
      \ e.g., \"d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f\"); depending\
      \ on the probability of collision (i.e., two hashes being identical); when that\
      \ probability is deemed high, we use SHA256."
    range: .nan
    notes: .nan
  - publish: true
    name: '*_index'
    data_type: integer
    description: index should be favored when a variable is used for referencing and
      when order is important (often, but not always the chronological order).  For
      example, "stimulus_position_index" implies its value points to an entry in a
      list of possible stimulus_positions. Note that "index" typically implies a context
      within which the indexing occurs and that context must be made explicit. For
      example, trial_index may index trials within a block or a timeline.
    range: .nan
    notes: 'Here we follow the convention of always starting counting/indexing from
      1 (rather than 0).



      Avoid the use of `*_number` because it is ambiguous.'
  - publish: true
    name: '*_repetition'
    data_type: integer
    description: 'is used to count the number of times the same "thing" occurred (e.g.,
      a participant completes the same test twice, the same stimulus appears multiple
      times). As with index, repetition assumes a context which must be clarified
      when ambiguous. '
    range: .nan
    notes: Repetition starts "counting" at 0 rather than 1; *_iteration instead of
      *_repetition would solve this issue but is less explicit and thus less preferred.
  - publish: true
    name: '*_label'
    data_type: string
    description: 'an text attached to a variable; expected to be human readable, but
      not unique. '
    range: .nan
    notes: .nan
- category: Variable Category
  fields:
  - publish: true
    name: identifier
    data_type: Identifier
    description: .nan
    range: .nan
    notes: .nan
  - publish: true
    name: context
    data_type: Context
    description: .nan
    range: .nan
    notes: .nan
  - publish: true
    name: Task
    data_type: .nan
    description: Describes key properties of the task or activity during which this
      data was collected.
    range: .nan
    notes: .nan
  - publish: true
    name: Stimulus
    data_type: .nan
    description: Describes the most relevant information about the stimuli presented
      during a given trial and provides information on where to find more detailed
      information about what exact stimuli were presented, how and when (this sub-trial
      data will be in separate tables).
    range: .nan
    notes: .nan
  - publish: true
    name: Option
    data_type: .nan
    description: Describes the set of options that were offered to the subject for
      responding on a given trial. Information about the individual options within
      that set are stored in a different, sub-trial table.
    range: .nan
    notes: .nan
  - publish: true
    name: Input
    data_type: .nan
    description: Describes the kinds of actions the subject performed in a trial.
    range: .nan
    notes: .nan
  - publish: true
    name: Expectation
    data_type: .nan
    description: 'Describes what response is expected from the subject (i.e., which
      response would evaluate to correct).


      In general, expectation will display/refer to a particular option among the
      set of options offered to the subject (in choice tasks) and will have the same
      structure and format as the actual response data so that expected response and
      actual responses can be directly compared (e.g., if response_index == expected_response_index,
      then correct = TRUE).'
    range: .nan
    notes: .nan
  - publish: true
    name: Response
    data_type: .nan
    description: .nan
    range: .nan
    notes: .nan
  - publish: true
    name: Evaluation
    data_type: .nan
    description: .nan
    range: .nan
    notes: .nan
  - publish: true
    name: Feedback
    data_type: .nan
    description: "Describes what feedback was shown on a given trial. Because feedback\
      \ hasn\u2019t yet been fully specified in our data model we will use the most\
      \ basic representation for feedback information in the trial table."
    range: .nan
    notes: .nan
  - publish: true
    name: Experimental Design
    data_type: .nan
    description: .nan
    range: .nan
    notes: .nan
  - publish: true
    name: Accessories
    data_type: .nan
    description: Describes what additional data was recorded in parallel to behavioral
      response data (e.g., EEG).
    range: .nan
    notes: .nan
  - publish: true
    name: Reward
    data_type: .nan
    description: Describes the reward signals subjects received.
    range: .nan
    notes: .nan
  - publish: true
    name: Outcome
    data_type: .nan
    description: Describes the consequences of subjects actions within the test environment
      (e.g., box opened).
    range: .nan
    notes: .nan
- category: Variable Type
  fields:
  - publish: false
    name: index
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: tag
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: control
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: parameter
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: measurement
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: fixed
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: sampled
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: controlled
    data_type: variable type
    description: .nan
    range: .nan
    notes: .nan
  description: ''
  publish: false
- category: Data Type
  fields:
  - publish: false
    name: integer
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: string
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: list[integer]
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: list[booleans]
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: enum
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: list[string]
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: datetime
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: boolean
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: float
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: set
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: probability
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: list[enum]
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  - publish: false
    name: list
    data_type: data type
    description: .nan
    range: .nan
    notes: .nan
  description: ''
  publish: false
