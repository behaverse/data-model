- categories:
  - Key
  variable_name: stimulus_id
  data_type: id
  required: true
  description: A reference to the primary key `id` of the @Stimulus table.
  range: '`id` in the corresponding @Stimulus table (same subject/session/activity).'
- categories:
  - Key
  variable_name: index
  data_type: index
  required: true
  description: A 1-based index indicating the stacking order of stimulus components.
    A stimulus component with a higher `index` is displayed on top of those with lower
    values, similar to CSS z-index property.
  range: 1-based indices
  notes:
  - If the presented options have no specific temporal or spatial order, leave this
    field empty or assign the same index to all options, e.g., `index=1`.
- categories:
  - Where
  variable_name: x_screen
  data_type: integer
  required: false
  description: 'X coordinates of the stimulus component relative to the left edge
    of the screen in pixels. '
  range: pixels
  notes:
  - .important In BDM, the preferred position is the center of the object. However,
    specific implementations of the tasks may use other locations such as the top-left
    corner. If this is the case, it should be explicitly stated in the [codebook](/reference/general/codebook.qmd).
- categories:
  - Where
  variable_name: y_screen
  data_type: integer
  required: false
  description: Y coordinates of the stimulus component relative to the top edge of
    the screen in pixels.
  range: pixels
- categories:
  - Where
  variable_name: x_viewport
  data_type: float
  required: false
  description: X coordinates of the stimulus component relative to the left edge of
    the screen expressed as a fraction of the screen width.
  range: 0 to 1 (inclusive)
- categories:
  - Where
  variable_name: y_viewport
  data_type: float
  required: false
  description: Y coordinates of the stimulus component relative to the top edge of
    the screen expressed as a fraction of the screen height.
  range: 0 to 1 (inclusive)
- categories:
  - What
  variable_name: description
  data_type: string
  required: true
  description: A human readable, compact description of the component.
- categories:
  - What
  variable_name: symbol_name
  data_type: string
  required: false
  description: The human-readable name of the displayed symbol.
- categories:
  - What
  variable_name: symbol_count
  data_type: integer
  required: false
  description: The number of symbols represented in this component.
- categories:
  - What
  variable_name: symbol_layout
  data_type: enum
  required: false
  description: How the symbols are laid out.
  range: '- `vertical`: along the Y axis.

    - `horizontal`: along the X axis.

    - `diagonal_top_left`

    - `diagonal_top_right`

    - `square`

    - `ring`

    - `cross`

    - `two_columns`'
  notes:
  - .tip If none of the predefined layouts apply, leave this field empty or use a
    custom human-readable label. Make sure custom labels are clearly defined in the
    codebook.
- categories:
  - What
  variable_name: color_name
  data_type: string
  required: false
  description: The human-readable name of the component color, e.g., `red`.
  notes:
  - .tip To maintain clarity and consistency, BDM recommends using CSS-style naming
    conventions for colors (e.g., "lightgray").
- categories:
  - What
  variable_name: color_hex
  data_type: string
  required: false
  description: 'The hexadecimal RGB color code of the component (e.g., #FF0000 for
    red) with optional alpha channel for transparency.'
  range: '#000000  to #FFFFFF'
- categories:
  - What
  variable_name: orientation
  data_type: enum
  required: false
  description: Indicates the symbol orientation.
  range: '- `north`: bottom to top.

    - `north_east`

    - `east`: left to right.

    - `south_east`

    - `south`: top to bottom.

    - `south_west`

    - `west`: right to left

    - `north_west`

    - `free`: no specific orientation.'
  notes:
  - .tip If none of the predefined orientations apply, leave this field empty or use
    a custom human-readable label. Make sure custom labels are clearly defined in
    the codebook.
